local version = 10

local base_url = "http://dev.ible.gq/"
local listprograms = base_url.."listprograms.php"
local programList = {}

--# Caching the program list for the first time
local handle = http.get(listprograms)
for line in handle.readLine do 
	if(line == "") then break end
	programList[line] = true
end

--# Check for an available update
local handle = http.get(base_url.."updater/checklatest")
local newVersion = handle.readLine()
if(newVersion ~= "") then
	if(tonumber(newVersion) > version) then
		print("Update available!")
	end
end

--handling the input
local args = {...}
local cmd = args[1]
if(cmd == "listPrograms") then
	if(args[2] == "update") then
		programList = {}
		local handle = http.get(listprograms)
		for line in handle.readLine do 
			if(line == "") then break end
			print(line)
			programList[line] = true
		end
	else 
		for k,v in pairs(programList) do print(k) end
	end
elseif(cmd == "download") then
	if(programList[args[2]]) then
		local handle = http.get(base_url..args[2].."/"..args[3])
		local content = handle.readLine()
		if(content=="VERSION UNKNOWN") then error(content) end
		content = content.."\n"
		for line in handle.readLine do
			if(line == "<!-- Hosting24 Analytics Code -->") then break end
			content = content..line.."\n"
		end
		if(not fs.exists(args[2].."_")) then fs.makeDir(args[2].."_") end
		local handle = fs.open(args[2].."_/"..args[2].."_"..args[3],"w")
		handle.write(content)
		handle.close()
	end
elseif(cmd == "latestversion") then
	if(programList[args[2]]) then
		local handle = http.get(base_url..args[2].."/checklatest")
		local ver = handle.readLine()
		handle.close()
		print("The latest stable version of "..args[2].." is"..ver)
	end
end